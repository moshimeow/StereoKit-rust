use demos::a_stepper::AStepper;
use stereokit_rust::{sk::{SkSettings, OriginMode, DisplayMode}, system::{LogLevel, Input, Handed}, maths::{Matrix, Vec3}};

pub mod demos;



pub fn main() {
    _main();
}

#[cfg_attr(target_os = "android", ndk_glue::main(backtrace = "on", logger(level = "debug", tag = "stereokit")))]
pub fn _main() {
    let mut settings = SkSettings::default();
    settings.app_name("stereokit").assets_folder("assets").origin(OriginMode::Stage);
    if cfg!(target_os = "android") {
        settings.log_filter(LogLevel::Inform);
    } else {
        settings
            .display_preference(DisplayMode::Flatscreen)
            .mode(stereokit_rust::sk::AppMode::Simulator)
            .disable_flatscreen_mr_sim(false)
            .no_flatscreen_fallback(true)
            .log_filter(LogLevel::Inform)
            ;
            
    }
    let mut sk = settings.init().unwrap();

    let mut grip_on = false;
    let mut next_stepper = false;
    let mut stage = 0;

    let mut current_stepper = sk.add_stepper_default::<AStepper>();

    sk.run_raw(
        |sk| {
            if next_stepper {
                match stage % 2 {
                    0 => {
                        sk.remove_stepper(current_stepper);
                        current_stepper = sk.add_stepper_default::<AStepper>();
                    }
                    1 => {
                        sk.remove_stepper(current_stepper);
                        let mut a = AStepper::default();
                        a.transform = Matrix::t(Vec3::NEG_Z + Vec3::Y);
                        current_stepper = sk
                            .add_stepper(a);
                    }
                    _ => {
                        stage = 0;
                    }
                }
            }
            next_stepper = false;
            match Input::hand(Handed::Right).grip_activation.round() as i8 {
                0 => {
                    if grip_on {
                        grip_on = false;
                        stage += 1;
                        next_stepper = true;
                    }
                }
                1 => {
                    if !grip_on {
                        grip_on = true;
                    }
                }
                _ => {}
            }
        },
        |_sk| {},
    )
}

